# ============================================
# AI-Powered Blog Platform
# DOCKER Environment Configuration
# ============================================
#
# This configuration is for running with Docker Compose
# For local development, see .env.example
#
# SETUP:
#   cp .env.docker.example .env
#   Update with your values
#   docker-compose up -d
#
# ============================================

# ============================================
# Django Core Settings
# ============================================
SECRET_KEY=django-insecure-REPLACE-THIS-WITH-RANDOM-KEY
DEBUG=False
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
CSRF_TRUSTED_ORIGINS=http://localhost:8001,http://127.0.0.1:8001

# ============================================
# Database - Docker PostgreSQL
# ============================================
DB_NAME=blog_ai_db
DB_USER=Docker_postgres
DB_PASSWORD=your_secure_password_here
DB_HOST=db
DB_PORT=5432

# ============================================
# Security (Docker - Keep disabled for dev)
# ============================================
# Enable these in production with HTTPS:
# SECURE_SSL_REDIRECT=True
# SESSION_COOKIE_SECURE=True
# CSRF_COOKIE_SECURE=True
# SECURE_HSTS_SECONDS=31536000
#
# For development:
SECURE_SSL_REDIRECT=False
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False
SECURE_HSTS_SECONDS=0
SECURE_HSTS_INCLUDE_SUBDOMAINS=False
SECURE_HSTS_PRELOAD=False

# ============================================
# API Keys
# ============================================
OPENAI_API_KEY=your-openai-key-here
VALUESERP_API_KEY=your-valueserp-key-here
DEFAULT_COUNTRY=us

# ============================================
# Superuser Auto-Creation (OPTIONAL)
# ============================================
# OPTION 1 - Auto-create (Quick Docker setup):
#   Uncomment these lines to auto-create admin user
#   Good for: Local Docker testing, development
#   Security: Use strong password, change after first login
#
# DJANGO_SUPERUSER_USERNAME=admin
# DJANGO_SUPERUSER_PASSWORD=ChangeThisPassword123!
# DJANGO_SUPERUSER_EMAIL=admin@example.com
#
# OPTION 2 - Manual creation (Recommended for production):
#   Leave above lines commented out
#   After deploy:
#     docker-compose exec -it web python manage.py createsuperuser
#   Good for: Production deployments, better security
#
# ============================================

# ============================================
# DOCKER QUICK START
# ============================================
# 1. Copy this file:
#      cp .env.docker.example .env
#
# 2. Update SECRET_KEY, passwords, and API keys
#
# 3. (Optional) Uncomment DJANGO_SUPERUSER_* for auto-creation
#
# 4. Start Docker:
#      docker-compose up -d
#
# 5. Access:
#      Main: http://localhost:8001/
#      Admin: http://localhost:8001/admin/
#
# ============================================
